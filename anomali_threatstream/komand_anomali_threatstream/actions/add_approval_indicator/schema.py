# GENERATED BY KOMAND SDK - DO NOT EDIT
import komand
import json


class Input:
    FILE = "file"
    INDICATOR_SETTINGS = "indicator_settings"
    

class Output:
    RESULTS = "results"
    

class AddApprovalIndicatorInput(komand.Input):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "file": {
      "$ref": "#/definitions/file",
      "title": "File",
      "description": "File of data to be imported into Anomali",
      "order": 1
    },
    "indicator_settings": {
      "$ref": "#/definitions/indicator_settings",
      "title": "Indicator Settings",
      "description": "Settings needed for importing an indicator that needs approval",
      "order": 2
    }
  },
  "required": [
    "file"
  ],
  "definitions": {
    "file": {
      "id": "file",
      "type": "object",
      "title": "File",
      "description": "File Object",
      "properties": {
        "content": {
          "type": "string",
          "title": "Content",
          "description": "File contents",
          "format": "bytes"
        },
        "filename": {
          "type": "string",
          "title": "Filename",
          "description": "Name of file"
        }
      }
    },
    "indicator_settings": {
      "type": "object",
      "title": "indicator_settings",
      "properties": {
        "classification": {
          "type": "string",
          "title": "Classification",
          "description": "Classification of the indicator",
          "default": "private",
          "enum": [
            "public",
            "private"
          ],
          "order": 4
        },
        "confidence": {
          "type": "integer",
          "title": "Confidence",
          "description": "Confidence value assigned to the indicator. Confidence score can range from 0-100, in increasing order of confidence",
          "order": 1
        },
        "domain_mapping": {
          "type": "string",
          "title": "Domain Mapping",
          "description": "Indicator type to assign if a specific type is not associated with an indicator",
          "order": 8
        },
        "email_mapping": {
          "type": "string",
          "title": "Email Mapping",
          "description": "Indicator type to assign if a specific type is not associated with an indicator",
          "order": 10
        },
        "expiration_ts": {
          "type": "string",
          "title": "Expiration Time Stamp",
          "displayType": "date",
          "description": "Time stamp of when intelligence will expire on ThreatStream",
          "format": "date-time",
          "order": 5
        },
        "ip_mapping": {
          "type": "string",
          "title": "IP Mapping",
          "description": "Indicator type to assign if a specific type is not associated with an indicator",
          "order": 7
        },
        "md5_mapping": {
          "type": "string",
          "title": "MD5 Mapping",
          "description": "Indicator type to assign if a specific type is not associated with an indicator",
          "order": 11
        },
        "notes": {
          "type": "array",
          "title": "Notes",
          "description": "Additional details for the indicator. This information is displayed in the Tags column of the ThreatStream UI e.g ['note1', 'note2', 'note3']",
          "items": {
            "type": "string"
          },
          "order": 6
        },
        "severity": {
          "type": "string",
          "title": "Severity",
          "description": "Severity you want to assign to the indicator when it is imported",
          "default": "",
          "enum": [
            "low",
            "medium",
            "high",
            "very-high",
            ""
          ],
          "order": 3
        },
        "source_confidence_weight": {
          "type": "integer",
          "title": "Source Confidence Weight",
          "description": "Specifies the ratio between the amount of the source confidence of each indicator and the ThreatStream confidence",
          "order": 2
        },
        "trustedcircles": {
          "type": "array",
          "title": "Trusted Circles",
          "description": "ID of the trusted circle to which this threat data should be imported. If you want to import the threat data to multiple trusted circles, enter the list of comma-separated IDs e.g [1,2,3]",
          "items": {
            "type": "integer"
          },
          "order": 12
        },
        "url_mapping": {
          "type": "string",
          "title": "URL Mapping",
          "description": "Indicator type to assign if a specific type is not associated with an indicator",
          "order": 9
        }
      },
      "required": [
        "classification"
      ]
    }
  }
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)


class AddApprovalIndicatorOutput(komand.Output):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "results": {
      "$ref": "#/definitions/import_indicator_response",
      "title": "Results",
      "description": "Results from adding indicators(s)",
      "order": 1
    }
  },
  "definitions": {
    "import_indicator_response": {
      "type": "object",
      "title": "import_indicator_response",
      "properties": {
        "import_session_id": {
          "type": "string",
          "title": "Import Session ID",
          "description": "ID for import session",
          "order": 3
        },
        "job_id": {
          "type": "string",
          "title": "Job ID",
          "description": "Job ID",
          "order": 1
        },
        "success": {
          "type": "boolean",
          "title": "Success",
          "description": "If import was successful",
          "order": 2
        }
      }
    }
  }
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)
